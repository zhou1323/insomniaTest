_type: export
__export_format: 4
__export_date: 2024-01-03T21:57:51.919Z
__export_source: insomnia.desktop.app:v8.5.1
resources:
  - _id: req_dad83e9d02284492a7abb2db51a97ccc
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704293474150
    created: 1704293474150
    url: "{{ _.base_url }}/products/add"
    name: create a new product
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "id": 0,
          "title": "string",
          "description": "string",
          "price": 0,
          "discountPercentage": 0,
          "rating": 0,
          "stock": 0,
          "brand": "string",
          "category": "string",
          "thumbnail": "string",
          "images": [
            "string"
          ]
        }
    parameters: []
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication: {}
    metaSortKey: -1704293474150
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    parentId: wrk_a7b95cbe51a048ff90ec42e104ec9355
    modified: 1704293474140
    created: 1704293474140
    name: Product
    description: The product API
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1704293474140
    _type: request_group
  - _id: wrk_a7b95cbe51a048ff90ec42e104ec9355
    parentId: null
    modified: 1702628488726
    created: 1702628409691
    name: Bart.yaml
    description: ""
    scope: design
    _type: workspace
  - _id: req_226de7c5e93f460497f469b95570a99f
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704293474149
    created: 1704293474149
    url: "{{ _.base_url }}/products/{{ _.product_id }}"
    name: delete a product
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1704293474149
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3316cfb5f36f4bd08d8c1bae1b615908
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704299354216
    created: 1704293474146
    url: "{{ _.base_url }}/products/{{ _.product_id }}"
    name: update a product
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "price": 1231
        }
    parameters: []
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication: {}
    metaSortKey: -1704293474146
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_5452cafe7ddf43b3ae973f9b935bf75c
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704299745497
    created: 1704299735807
    url: "{{ _.base_url }}/products/{{ _.product_id }}"
    name: remove the images of a product
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |-
        {
          "images": []
        }
    parameters: []
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication: {}
    metaSortKey: -1704293474145.5
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3420e30983f34576a70f1aa838c8b70a
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704293474145
    created: 1704293474145
    url: "{{ _.base_url }}/products/{{ _.product_id }}"
    name: get product by id
    description: ""
    method: GET
    body: {}
    parameters:
      - name: select
        disabled: true
        value: string
    headers: []
    authentication: {}
    metaSortKey: -1704293474145
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_56e31abff0854534ac694c62d3b8346a
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704293474144
    created: 1704293474144
    url: "{{ _.base_url }}/products/search"
    name: search products
    description: ""
    method: GET
    body: {}
    parameters:
      - name: q
        disabled: true
        value: string
      - name: limit
        disabled: true
        value: "0"
      - name: skip
        disabled: true
        value: "0"
      - name: select
        disabled: true
        value: string
    headers: []
    authentication: {}
    metaSortKey: -1704293474144
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3251931ee20d4aec8720f09ea1b2700d
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704293474143
    created: 1704293474143
    url: "{{ _.base_url }}/products"
    name: get all products
    description: ""
    method: GET
    body: {}
    parameters:
      - name: limit
        disabled: true
        value: "0"
      - name: skip
        disabled: true
        value: "0"
      - name: select
        disabled: true
        value: string
    headers: []
    authentication: {}
    metaSortKey: -1704293474143
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_e4fbb612749a45d6a232eec01ab6096a
    parentId: fld_58f6d5b169ee4dc2b6b538a3d5dd18bc
    modified: 1704312156662
    created: 1704293474142
    url: "{{ _.base_url }}/auth/products"
    name: get all products with auth
    description: ""
    method: GET
    body: {}
    parameters:
      - name: limit
        disabled: true
        value: "0"
      - name: skip
        disabled: true
        value: "0"
      - name: select
        disabled: true
        value: string
    headers: []
    authentication:
      type: apikey
      disabled: false
      key: Authorization
      value: Bearer {% response 'body', 'req_cece73c3984c4106b56746d613596381',
        'b64::JC50b2tlbg==::46b', 'always', 60 %}
      addTo: header
    metaSortKey: -1704293474142
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_cece73c3984c4106b56746d613596381
    parentId: fld_b733e7d0930a4b748a2825b60433b5ee
    modified: 1704298445134
    created: 1704293474141
    url: "{{ _.base_url }}/auth/login"
    name: login and get token
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "username": "kminchelle",
          "password": "0lelplR"
        }
    parameters: []
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    authentication: {}
    metaSortKey: -1704293474141
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_b733e7d0930a4b748a2825b60433b5ee
    parentId: wrk_a7b95cbe51a048ff90ec42e104ec9355
    modified: 1704293474139
    created: 1704293474139
    name: Auth
    description: The authentication API
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1704293474139
    _type: request_group
  - _id: env_1e1091cac251742a5182cb1d46579dcee0053c00
    parentId: wrk_a7b95cbe51a048ff90ec42e104ec9355
    modified: 1702628488721
    created: 1702628409694
    name: Base Environment
    data: {}
    dataPropertyOrder: null
    color: null
    isPrivate: false
    metaSortKey: 1702628409694
    _type: environment
  - _id: jar_1e1091cac251742a5182cb1d46579dcee0053c00
    parentId: wrk_a7b95cbe51a048ff90ec42e104ec9355
    modified: 1702628490517
    created: 1702628490517
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_292d0eb616de4e3e8adff2706f6629ee
    parentId: wrk_a7b95cbe51a048ff90ec42e104ec9355
    modified: 1704299264887
    created: 1704291493165
    fileName: Bart.yaml
    contents: |
      openapi: 3.0.0
      info:
        title: DummyJSON API
        version: 0.0.1
        description: DummyJSON API
        contact:
          email: apiteam@swagger.io
      externalDocs:
        description: swagger.json
        url: /api-docs/swagger.json
      paths:
        /auth/login:
          post:
            summary: login and get token
            description: "login"
            operationId: login
            tags:
              - Auth
            requestBody:
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/User'
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/User'
              '500':
                description: error
        /auth/products:
           get:
            summary: get all products with auth
            description: "get all products with auth"
            operationId: getAllProductsWithAuth
            tags:
              - Product
            parameters:
              - in: query
                name: limit
                schema:
                  type: number
                required: false
              - in: query
                name: skip
                schema:
                  type: number
                required: false
              - in: query
                name: select
                schema:
                  type: string
                required: false
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Products'
              '500':
                description: error
        /products:
          get:
            summary: get all products
            description: "get all products"
            operationId: getAllProducts
            tags:
              - Product
            parameters:
              - in: query
                name: limit
                schema:
                  type: number
                required: false
              - in: query
                name: skip
                schema:
                  type: number
                required: false
              - in: query
                name: select
                schema:
                  type: string
                required: false
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Products'
              '500':
                description: error
        /products/search:
          get:
            summary: search products
            description: "search products"
            operationId: searchProducts
            tags:
              - Product
            parameters:
              - in: query
                name: q
                description: searchQuery
                schema:
                  type: string
                required: false
              - in: query
                name: limit
                schema:
                  type: number
                required: false
              - in: query
                name: skip
                schema:
                  type: number
                required: false
              - in: query
                name: select
                schema:
                  type: string
                required: false
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Products'
              '500':
                description: error
        '/products/{product_id}':
          get:
            summary: get product by id
            description: "get product by id"
            operationId: getProductById
            tags:
              - Product
            parameters:
              - in: path
                name: product_id
                schema:
                  type: integer
                required: true
              - in: query
                name: select
                schema:
                  type: string
                required: false
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Product'
              '500':
                description: error
          put:
            summary: update a product
            description: "update a product"
            operationId: updateProduct
            tags:
              - Product
            parameters:
              - in: path
                name: product_id
                schema:
                  type: integer
                required: true
            requestBody:
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Product'
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Product'
              '500':
                description: error
          delete:
            summary: delete a product
            description: "delete a product"
            operationId: deleteProduct
            tags:
              - Product
            parameters:
              - in: path
                name: product_id
                schema:
                  type: integer
                required: true
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ProductDelete'
              '500':
                description: error
        /products/add:
          post:
            summary: create a new product
            description: "create a product"
            operationId: createProduct
            tags:
              - Product
            requestBody:
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Product'
            responses:
              '200':
                description: success
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Product'
              '500':
                description: error
      components:
        schemas:
          User:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              id:
                type: string
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              gender:
                type: string
              image:
                type: string
              token:
                type: string
          Products:
            type: object
            properties:
              products:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              total:
                type: number
              skip:
                type: number
              limit:
                type: number
          Product:
            type: object
            properties:
              id:
                type: number
              title:
                type: string
              description:
                type: string
              price:
                type: number
              discountPercentage:
                type: number
              rating:
                type: number
              stock:
                type: number
              brand:
                type: string
              category:
                type: string
              thumbnail:
                type: string
              images:
                type: array
                items:
                  type: string
          ProductDelete:
            allOf:
              - $ref: '#/components/schemas/Product'
              - type: object
                properties:
                  isDeleted:
                    type: boolean
                  deletedOn:
                    type: string
      tags:
        - name: Auth
          description: The authentication API
        - name: Product
          description: The product API
      servers:
        - url: https://dummyjson.com
    contentType: yaml
    _type: api_spec
  - _id: uts_ec216de22c1a49c1b731ea2492125079
    parentId: wrk_a7b95cbe51a048ff90ec42e104ec9355
    modified: 1704298948501
    created: 1704293265487
    name: Test Suite
    _type: unit_test_suite
  - _id: env_466c9bef372e4b23aba4d9951bcc78bb
    parentId: env_1e1091cac251742a5182cb1d46579dcee0053c00
    modified: 1704198115872
    created: 1704198103852
    name: Test Environment
    data: {}
    dataPropertyOrder: null
    color: null
    isPrivate: true
    metaSortKey: 1704198103852
    _type: environment
  - _id: env_82c377f24a0b47deb89c6e4c491f2b2f
    parentId: env_1e1091cac251742a5182cb1d46579dcee0053c00
    modified: 1704317484376
    created: 1704290876188
    name: OpenAPI env dummyjson.com
    data:
      scheme: https
      base_path: ""
      host: dummyjson.com
      base_url: https://dummyjson.com
      product_id: "1"
      GLOBAL_HEADERS: {}
    dataPropertyOrder:
      "&":
        - scheme
        - base_path
        - host
        - base_url
        - product_id
        - GLOBAL_HEADERS
    color: null
    isPrivate: false
    metaSortKey: 1704290876188
    _type: environment
  - _id: ut_4e49b6b1bed1480f85157867d952e233
    parentId: uts_ec216de22c1a49c1b731ea2492125079
    modified: 1704298711974
    created: 1704293268307
    requestId: req_3420e30983f34576a70f1aa838c8b70a
    name: Test login function
    code: |-
      const response1 = await insomnia.send();
      expect(response1.status).to.equal(200);
    _type: unit_test
  - _id: ut_5f1e1f81b97143c98bacf5454a3691e7
    parentId: uts_ec216de22c1a49c1b731ea2492125079
    modified: 1704300206105
    created: 1704298786360
    requestId: req_5452cafe7ddf43b3ae973f9b935bf75c
    name: Remove the images of a product
    code: |-
      const response1 = await insomnia.send();
      const body = JSON.parse(response1.data);
      const currentImages = body.images;
      expect(currentImages).to.have.lengthOf(0);
    _type: unit_test
  - _id: ut_1919b7042bf443f3b34dba0021d29393
    parentId: uts_ec216de22c1a49c1b731ea2492125079
    modified: 1704313116794
    created: 1704313114398
    requestId: req_3251931ee20d4aec8720f09ea1b2700d
    name: Returns 200
    code: |-
      const response1 = await insomnia.send();
      expect(response1.status).to.equal(200);
    _type: unit_test
